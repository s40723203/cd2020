var tipuesearch = {"pages": [{'title': 'WEEK', 'text': '', 'tags': '', 'url': 'WEEK.html'}, {'title': 'WEEK1~5', 'text': 'week1 \n 建立個人倉儲cd2020 \n 影片網址: https://www.youtube.com/watch?v=G0QF1s-XpHY&feature=youtu.be \n \n \n week2 \n 將Python3.7.3更新至Python3.8.2 \n 1.在2019fall裡新建cd2020的資料夾 \n 2. 在cd2020裡新建data 資料夾，再到data裡面新建分別為py382、 wscite432、portablegit的3個資料夾 \n 3 .到Python網站，滑至最下面點選 ，路徑設定到data \n *選項pip不要勾選 \n 4.下載 \xa0 full 64-bit download系統至wscite432並解壓縮 \n 5.新建start.bat和stop.bat \n start.bat內容 \n \n stop.bat內容 \n \n 6.下載 \xa0 msys2-x86_64-20190524.exe，路徑設定到data \n 7.下載64-bit Git for Windows Portable \xa0，路徑設定到\xa0 portablegit \n 8.開啟https://bootstrap.pypa.io/get-pip.py，另存新檔至data \n 9.開啟小黑框並打上python get-pip.py，完成後在打上pip install flask bs4 lxml pelican markdown flask_cors leo \n 影片網址: https://youtu.be/lLHSsS44UyY \n \n week3 \n Assignment 1 - 可攜系統 \n 新建msys64、home、portablegit、wscite237、tcc等資料夾 \n 下載 到 portablegit 並且開啟 下載 到 msys64 並且開啟 下載 到 wscite237 並解壓縮 開啟Scite \n \n 點選Options的 Global Options File 打開line number, 找到139和300行將其更改(如下圖所示) \n 139行 \n \n 300行 \n 另存\xa0 https://bootstrap.pypa.io/get-pip.py \xa0到data目錄下 新增start 和stop到data \n \n start: \n \n stop: \n \n 開啟strat \n 打python get pip.py確定使用的版本 \n 安裝 模組 \n 打 pip install flask bs4 lxml pelican markdown flask_cors leo \n git clone tcc到自己的隨身系統 \n 打git clone https://github.com/TinyCC/tinycc.git tcc \n 安裝jupyterlab \n 打 pip install jupyterlab==2.0.1 \n 下載 fossil scm放到data \n 影片網址: https://youtu.be/fe9X6PGFgLM \n \n https://github.com/s40723203/cd2020/tree/master/downloads/Assignment1 \n', 'tags': '', 'url': 'WEEK1~5.html'}, {'title': 'WEEK6~9', 'text': 'week6 \n 進度報告 \n 影片網址: https://youtu.be/6FlyCXkcCv0 \n \n 下載OBS \n 下載OBS(Window版本) \n https://obsproject.com/ \n 下載後直接開啟 \n 新增錄影來源(視訊擷取裝置、顯示器擷取) \n *無法顯示電腦畫面解決方法 \n 開啟控制面板，點選程式設定 \n 新增OBS.exe \n 下方選項 選取整合圖形 後套用 \n 重新開啟OBS即可 \n 影片網址: https://youtu.be/Pke8nO9kVsg \n \n week7 \n 翻譯Topic1第二章 \n 第二章 編譯設計  我們的設計都將從產品的想法開始。這些想法需要被驗證。因此，我們將著手構建原型，如果這些原型通過測試，我們將通過圖紙記錄設計。我們需要文檔才能以可重複的方式構建更多產品。  本章將讓我們從僅僅對產品有一個想法的角度出發，一直以最佳方式放置構成最後設計的所有單個物件。  我們從"空白紙"開始，那張紙將充滿物理物體。第一個令人關切的項目是紙張是確實為"空白"還是存在一些限制。下一個關注項目將確定要包括哪些物理物件。然後，我們應該假設這些對象是基於整體設計目標的最佳放置。因此，我們將以一些詞語來總結我們對該項目放置的選擇。 \n 2.1 起點 設計師的任務是對現有設計進行作業或開始新的設計。讓我們花一點時間看看這些起點的區別。  全新的設計:這對設計師是新的開始;除了遵守規範之外，基本上沒有約束。我們有寫出一整節關於規格的確切內容及其各種元件。  延續(或添加到)現有的設計:改變設計，修改現有設計的一小部分。必須利用現有的設計，這是很大的挑戰。我們將有一個單獨的章節來定義在此背景下的確切內容"系統" 。  對現有設計進行重大修改:同樣是改變設計，在這種情況下，將修改原始設計的一大部分。這裡設計師的任務是改變整體設計的一部分，因此比全新的設計有更多的約束，因此瞭解當前設計工作非常重要。我們的「基本佈局」可以同時進行，也可以不受以前工作的限制。 \n 2.2 定義設計邊界:描述系統  定義設計"系統"的幾句話:設計可以是極其複雜的、大的(如太空梭或大型客機)、小的系統(如汽車)，或者更小的系統(如個人電腦、咖啡機或手機)。與其他設備的範圍、成本、時間、提交的資源數量以及與介面因所有這些設計專案而異。設計人員必須牢記正在設計的系統。這很重要，其中原因: ⦁ 關注個人責任(工作範圍) ⦁ 意識到必須與本設計介面的其他裝置 ⦁ 整體「系統」功能(而不僅僅是子系統的功能) 像手機一樣"小"的東西也是系統的一部分。也就是說消費者購買的範圍可包含: ⦁ 手機 ⦁ 充電器 ⦁ 電纜 ⦁ SIM 卡 ⦁ 說明書 ⦁ 其他運輸材料(標籤、袋子、氣泡包裝) (這裡將限制對"系統"的討論，因為人們可以想到的系統很多)  我們從系統描述開始，因為大多數電子外殼都環繞和支援產品。有時，可以將一種產品視為較大產品的一部分。例如，網路適配器卡(產品本身)可以放入微電腦(第二個產品)中，形成全新的產品，隨著可連接網路的微電腦本身構成網路的一部分，情況變得更加複雜，而網路可能是更大的產品。  從另一種方式來看，我們的任務可能只是設計一個更大的系統的子系統。因此，我們的「系統」可能甚至不是產品,而僅僅是一個更大的系統的一部分,而該系統被分解成可管理的部分。 \n 圖2.1 系統描述 \n 例如，我們負責設計一台錄音機，作為較大系統的一部分。此系統如圖2.1所示該系統由至少三個主要子系統組成: ⦁ 資料記錄器 ⦁ 資料記錄器之支架 ⦁ 測量桿(標記為"極")，包括另一個子系統  實際上，這個"系統"會有更多單獨的部分，包括電纜、運輸容器(箱)和說明手冊。圖中所示的系統是在華盛頓特區史密森尼博物館出現的一個天寶測量系統的照片。  我們已成為"測量師系統設計組"的成員,並將設計整體的一部分(數據記錄器部分)。因此，我們首要的任務是指定到底要設計什麼(有點像在項目周圍"築一道籬笆"，將在給定的時間內完成)。為了完成此任務，我們需要一個規範。(請返回到章節1 討論。) \n 2.3設計程序  2.3.1專案總體開工到專案完成  設計可以以多種方式進行。各個公司執行產品設計的流程方式各不相同,但它們有一些共同的特點。最終結果(規範的一致性)是衡量成功的標準。通常以EPE設計器承擔任務"絕大部分"的責任。他們既是「實行者」,也是許多事情的「推動者」。  1.草圖構思─ 這是專案的"構思"階段。想法必須以圖片表示，一旦以圖片表示，它可以很容易地被審查和修訂。審查小組的人需要「圖片」的想法，才能真正看到正在提出什麼。  2.回顧想法和授權進行原型─ 這個行動採取「圖片」表達的想法，並把它變成團隊可以實際接觸的東西。客戶可以持有和使用;原型是一幅全尺寸的立體圖。"授權進行"很重要，因為項目和專案通常有時間和金錢的限制，因此這些支出必須由團隊同意。  3.原型製作的想法繪製(文件創建)─ 通常草圖被轉換為數位化繪圖檔，將允許被製作出來。 (現在設計將在修訂版1中。包含以斜體顯示正式文檔的"修訂級別",這將在章節12中進一步說明。)  4.製造原型(物理部件)─ 專案團隊要確定生產的成本和時間限制。有時只需要一個"臨時的"的原型,就能取得良好的進展;有時需要一個嚴格規範的原型。EPE設計器應該關注這個發展階段的需求  5.原型分析和測試─ 一旦團隊收到原型,就會進行測試看是否符合規範。項目團隊要確定具體需要執行哪些測試才能在測試後決定如何進行。  6.團隊對原型和結果進行審核，並提出修訂建議。 (假設修訂版 1需要改進,我們將將設計修訂為修訂版 2。)  7.改進原型(繪圖和原型)─ 是反覆運算過程的開始，最終將引導設計符合產品規範。  8.進一步分析和測試修訂版2 (假設修訂版2符合產品規格。)  9.最終檔案製作/最終測試/最終審查  10.正式批准設計生產版本 請注意，上述過程中的"生產版本"只允許生產"一定數量"，以銷售給客戶，或作為更多單位進行更寬泛的測試程序。公司在為一些客戶發佈和測試其產品的程式上可能有所不同。另請注意，大多數項目的修訂數比所示的多，但專案通常會繼續進行。 \n \n week8 \n 線上課程直播 \n 影片網址: https://youtu.be/PEoea5fIM2c \n \n', 'tags': '', 'url': 'WEEK6~9.html'}, {'title': 'WEEK10~14', 'text': 'week10 \n', 'tags': '', 'url': 'WEEK10~14.html'}, {'title': 'WEEK15~18', 'text': 'week15 \n', 'tags': '', 'url': 'WEEK15~18.html'}, {'title': 'Assignment', 'text': '', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment1', 'text': '1.Describe how to do an efficient random grouping for this course or do the roll calling randomly?  \n \n \n 亂數分組: \n \n \n \xa0 \xa0 將全部的學號作為被選取的樣本，用 len 確定名單人數，決定分組組數， 相除後得到每組人數後，利用 for 迴圈且限制數量進行分組。 \n \xa0 \n *radom:隨機從選項裡面選出樣本 \n *shuffle:將樣本隨機排列 \n \n \n 隨機點名: \n \n \n 在 radom 裡指定抽取人數，在樣本裡隨機選取指定人數。\xa0 \n \n 2.Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github?\xa0 \n \n \n 在 2019fall 裡新建cd2020 的資料夾，在 cd2020 裡新建 data 資 料夾，再到 data 裡面新建所需的資料夾 \n \n \n \n \n \n 下載 Python3.8.2 \n \n \n \n 完成後選擇第一個按 NEXT，不要選擇 pip 並繼續，載至指定位置 (data)即可。\xa0 \n \n \n 在 data 新建start.bat 和 stop.bat\xa0 \n \n \n start.bat 內容 \n \n stop.bat 內容 \n \n \n 下載 msys2-x86_64-20190524.exe，路徑設定到 msys64，完 成後開啟 \n \n \n \n 下載64-bit Git for Windows Portable ，路徑設定到 portablegit 後開啟\xa0 \n \n \n \n 開啟https://bootstrap.pypa.io/get-pip.py，另存新檔至 data\xa0 \n 下載 full 64-bit download 到 wscite237 並解壓縮\xa0 \n \n \n \n 開啟 Scite ，點選 Options 的 Global Options File，更改139 和 300 行 \n \n \n \n \n 在黑框打上 pip install flask bs4 lxml pelican markdown flask_cors leo 以安裝所需模組\xa0 \n git clone tcc 到自己的隨身系統(git clone https://github.com/TinyCC/tinycc.git tcc)\xa0 \n 安裝 jupyterlab(打 pip install jupyterlab==2.0.1 將會自動安裝)\xa0 \n 下載 fossil scm 放到 data\xa0 \n git clone flutter (git clone https://github.com/microsoft/vscode.git\xa0 vscode)\xa0 \n git clone vscode(git clone https://github.com/flutter/flutter.git -b stable)\xa0 \n .git clone 自己的倉儲到 tmp\xa0 \n \n', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Assignment2', 'text': 'Topic0: \n \n Topic1: \n', 'tags': '', 'url': 'Assignment2.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};