<h1>WEEK</h1>
<h2>WEEK1~5</h2>
<h4>week1</h4>
<h5>建立個人倉儲cd2020</h5>
<p>影片網址:<a href="https://www.youtube.com/watch?v=G0QF1s-XpHY&amp;feature=youtu.be">https://www.youtube.com/watch?v=G0QF1s-XpHY&amp;feature=youtu.be</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/G0QF1s-XpHY" width="560"></iframe></p>
<p></p>
<h4>week2</h4>
<h5>將Python3.7.3更新至Python3.8.2</h5>
<p>1.在2019fall裡新建cd2020的資料夾</p>
<p>2.<span>在cd2020裡新建data</span><span>資料夾，再到data裡面新建分別為py382、<span>wscite432、portablegit的3個資料夾</span></span></p>
<p><span><span>3</span></span>.到Python網站，滑至最下面點選<img alt="" height="44" src="/images/擷取.JPG" width="266"/>，路徑設定到data</p>
<p><strong>*選項pip不要勾選</strong></p>
<p>4.下載<span> </span><span>full 64-bit download系統至wscite432並解壓縮</span></p>
<p><span>5.新建start.bat和stop.bat</span></p>
<p><span>start.bat內容</span></p>
<p><span><img alt="" height="472" src="/images/1.JPG" width="510"/></span></p>
<p><span>stop.bat內容</span></p>
<p><span><img alt="" height="236" src="/images/2.JPG" width="322"/></span></p>
<p>6.下載<span> </span>msys2-x86_64-20190524.exe，路徑設定到data</p>
<p>7.下載64-bit Git for Windows Portable<span> ，路徑設定到 </span><span>portablegit</span></p>
<p><span>8.開啟https://bootstrap.pypa.io/get-pip.py，另存新檔至data</span></p>
<p>9.開啟小黑框並打上python get-pip.py，完成後在打上pip install flask bs4 lxml pelican markdown flask_cors leo</p>
<p>影片網址:</p>
<h2>WEEK6~10</h2>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>